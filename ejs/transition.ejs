<!DOCTYPE html>
<html>
<head>
    <%- include('_module/_header', {title:'汽车之家专题'}) -%>
    <%- include('_module/_link', {isLocal:true, version:20161126, filename:'topic'}) -%>

    <!-- rem设置 -->
    <%- include('_module/_rem') -%>
</head>
<body>
  <div class="wrapper">
    <h4>渐隐渐显</h4>
    <div id="fade">
      <button v-on:click="show = !show">
        Toggle
      </button>
      <transition name="fade">
        <p v-if="show" class="transtion-start">hello</p>
      </transition>
    </div>

    <div id="bounce">
      <button @click="show = !show">Toggle show</button>
      <transition name="bounce">
        <p v-if="show">Look at me!</p>
      </transition>
    </div>

    <div id="auto">
      <button @click="show = !show">
        Toggle render
      </button>
      <transition
        name="custom-classes-transition"
        enter-active-class="animated tada"
        leave-active-class="animated bounceOutRight"
      >
        <p v-if="show">自定义class</p>
      </transition>
    </div>

    <h4>钩子</h4>
    <div id="gouzi">
     <button @click="show = !show">
        start
      </button>
      <transition
        name="gouzi"
        v-on:before-enter="beforeEnter"
        v-on:enter="enter"
        v-on:after-enter="afterEnter"
        v-on:enter-cancelled="enterCancelled"

        v-on:before-leave="beforeLeave"
        v-on:leave="leave"
        v-on:after-leave="afterLeave"
        v-on:leave-cancelled="leaveCancelled"
      >
        <p v-if="show">自定义class</p>
      </transition>
    </div>

    <h4>初始渲染过度</h4>
    <div id="appear">
      <transition
        appear
        appear-class="custom-appear-class"
        appear-active-class="custom-appear-active-class"
      >
        <p>初始渲染过度动画</p>
      </transition>

      <transition
        appear
        name="appear"
        v-on:before-appear="customBeforeAppearHook"
        v-on:appear="customAppearHook"
        v-on:after-appear="customAfterAppearHook"
      >
        <p>初始渲染过度动画钩子</p>
      </transition>
    </div>

    <h4>列表为空或不为空状态</h4>
    <div id="more">
      <a href="javascript:;" @click="cnt = !cnt">显示数据</a>
      <transition name="more">
        <ul v-if="cnt">
          <li>不为空1</li>
          <li>不为空2</li>
          <li>不为空3</li>
        </ul>
        <p v-else>Sorry, no data</div>
      </transition>
    </div>

    <h4>两个相同标签内容不同的元素过度</h4>
    <div id="key">
    <a href="javascript:;" @click="isEditing = !isEditing">显示数据</a>
      <transition>
        <button v-if="isEditing" key="save">
          Save-key
        </button>
        <button v-else key="edit">
          Edit-key
        </button>
      </transition>
      <transition>
        <button v-if="isEditing">
          Save
        </button>
        <button v-else>
          Edit
        </button>
      </transition>
    </div>
	</div>

	<!-- start 弹窗，蒙板等额外的模块放在外面 -->
	<!-- html内容 -->
	<!-- end 弹窗，蒙板等额外的模块放在外面 -->
	<!-- start 根据需求引入js文件 -->
	<script src="assets/js/zepto-1.2.min.js"></script>
	<script src="assets/js/vue.js"></script>
	<!-- <script src="assets/js/topic.js"></script> -->
	<!-- end 根据需求引入js文件 -->
  <script>
    new Vue({
      el:"#fade",
      data:{
        show:true
      }
    });
    new Vue({
      el:"#bounce",
      data:{
        show:true
      }
    });
    new Vue({
      el:"#auto",
      data:{
        show:true
      }
    });

    new Vue({
      el:"#gouzi",
      data:{
        show:true
      },
      methods:{
        // startTransition:function(){
        //   this.start = true;
        // },
        beforeEnter: function (el) {
          // ...
          alert('beforeEnter');
        },
        // 此回调函数是可选项的设置
        // 与 CSS 结合时使用
        enter: function (el, done) {
          alert('enter');
          // ...
          console.log(done());
        },
        afterEnter: function (el) {
          alert('afterEnter');
          // ...
        },
        enterCancelled: function (el) {
          // ...
          alert('enterCancelled');
        },
        // --------
        // 离开时
        // --------
        beforeLeave: function (el) {
          // ...
          alert('beforeLeave');
        },
        // 此回调函数是可选项的设置
        // 与 CSS 结合时使用
        leave: function (el, done) {
          alert('leave');
          // ...
          done()

        },
        afterLeave: function (el) {
          // ...
          alert('afterLeave');
        },
        // leaveCancelled 只用于 v-show 中
        leaveCancelled: function (el) {
          // ...
          alert('leaveCancelled');
        }
      }
    });

    new Vue({
      el:"#appear",
      data:{
        show:true
      },
      methods:{
        customBeforeAppearHook:function(){
          // alert('customBeforeAppearHook');
        },
        customAppearHook:function(){
          // alert('customAppearHook');
        },
        customAfterAppearHook:function(){
          // alert('customAfterAppearHook');
        }
      }
    });

    new Vue({
      el:"#more",
      data:{
        cnt:true
      }
    });

    new Vue({
      el:"#key",
      data:{
        isEditing:true
      }
    });
  </script>

  <style>
    h4{
      font-size:16px;
      color:red;
    }
    .fade-enter-active, .fade-leave-active {
      transition: opacity .5s ease-in-out;
    }
    .fade-enter-to, .fade-leave {
      opacity: 1
    }
    .fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */ {
      opacity: 0
    }

    .bounce-enter-active {
      animation: bounce-in .5s;
    }
    .bounce-leave-active {
      animation: bounce-out .5s;
    }
    @keyframes bounce-in {
      0% {
        transform: scale(0);
      }
      50% {
        transform: scale(1.5);
      }
      100% {
        transform: scale(1);
      }
    }
    @keyframes bounce-out {
      0% {
        transform: scale(1);
      }
      50% {
        transform: scale(1.5);
      }
      100% {
        transform: scale(0);
      }
    }

    .animated.tada, .animated.bounceOutRight{
      transition:color .5s ease-in-out;
    }
    .custom-classes-transition-enter, .custom-classes-transition-leave-to{
      color:green;
    }

    .gouzi-enter-active, .gouzi-leave-active {
      transition: opacity .5s ease-in-out;
    }
    .gouzi-enter-to, .gouzi-leave {
      opacity: 1
    }
    .gouzi-enter, .gouzi-leave-to /* .fade-leave-active in <2.1.8 */ {
      opacity: 0
    }

    .custom-appear-class{
      color:blue;
    }
    .custom-appear-active-class{
      transition:color 5s ease-in-out;
    }

    .more-enter-active, .more-leave-active{
      transition:all 500ms ease-in-out;
    }
    .more-enter, .more-leave-to{
      transform:translate(40px, 0) scale(0);
      opacity:0;
    }

    .v-enter-active, .v-leave-active{
      transition:all 500ms ease-in-out;
    }
    .v-enter, .v-leave-to{
      transform:translate(40px, 0) scale(0);
      opacity:0;
    }
  </style>
</body>
</html>
